{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/question/question.component.ts","./src/app/components/question/question.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/score/score.component.ts","./src/app/components/score/score.component.html","./src/app/shared/services/question.service.ts","./src/app/app.module.ts","./src/app/components/category/category.component.ts","./src/app/components/category/category.component.html","./src/app/shared/services/score.service.ts","./src/app/app-routing.module.ts","./src/app/shared/decode-html-entities.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  opentdbApi: {\n    allowedUrls: [],\n    retrieveTokenUrl:'https://opentdb.com/api_token.php?command=request',\n    opentdbBaseUrl: 'https://opentdb.com/',\n    trivia_categories: 'https://opentdb.com/api_category.php',\n\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ɵConsole, } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Question } from 'src/app/models/question';\nimport { QuestionService } from 'src/app/shared/services/question.service';\nimport { ScoreService } from 'src/app/shared/services/score.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  category: number;\n  amount: number;\n  questions: Question[] = [];\n  currentQuestion: Question;\n  currentQuestionCount: number;\n  correctAnswer: string;\n  incorrectAnswers: string[];\n  alternatives: string[];\n  score: number;\n  isLoading = true;\n\n  constructor(\n    private questionService: QuestionService,\n    private scoreService: ScoreService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.amount = params['amount'];\n        this.category = +params['category'];\n      }\n    );\n    this.getAllQuestions(this.amount, this.category);\n  }\n\n  getAllQuestions(amount: number, category: number): void{\n    this.questionService.getQuestions(amount, category).subscribe( response => {\n      if (response.response_code === 0){\n        this.questions = response.results;\n        this.currentQuestionCount = 1;\n        this.amount = this.questions.length;\n        this.score = 0;\n        this.scoreService.setMaxScore(this.amount);\n        this.getNextQuestion(1);\n      }\n      if (response.response_code === 1 ){\n        this.getAllQuestions(--this.amount, this.category);\n      }\n      this.isLoading = false;\n    });\n  }\n\n  getNextQuestion(currentQuestionCount: number): void{\n    if (currentQuestionCount <= this.amount) {\n      this.currentQuestion = this.questions[currentQuestionCount - 1];\n      this.correctAnswer = this.currentQuestion.correct_answer;\n      this.incorrectAnswers = this.currentQuestion.incorrect_answers;\n      const unshuffledAlternatives = this.incorrectAnswers;\n\n      unshuffledAlternatives.push(this.correctAnswer);\n      this.alternatives = unshuffledAlternatives\n      .map((a) => ({sort: Math.random(), value: a}))\n      .sort((a, b) => a.sort - b.sort)\n      .map((a) => a.value);\n    }\n    else {\n      this.router.navigate(['/score']);\n    }\n  }\n  onSelectAnswer(answer: string): void{\n      if (answer === this.correctAnswer){\n        this.scoreService.addPoints();\n      }\n      this.getNextQuestion(++this.currentQuestionCount);\n  }\n\n  onNavigateToMenu(): void{\n    this.router.navigate(['/categories']);\n  }\n}\n","<main *ngIf=\"!isLoading; else loading\">\n  <h1 class=\"display-4\">Question {{currentQuestionCount }} of {{amount}}</h1>\n    <section class=\"container-fluid main-container d-flex flex-wrap justify-content-center\" >\n      <div class=\"text-center w-75 question\">\n        <h3 class=\"mb-5\" [innerHtml]=\"currentQuestion?.question | decodeHtmlEntities\"> {{ currentQuestion?.question  }}</h3>\n      </div>\n      <div class=\"container-fluid main-container d-flex flex-wrap justify-content-center\" >\n        <div class=\"card p-0 \" *ngFor=\"let alternative of alternatives\" (click)=\"onSelectAnswer(alternative)\">\n          <div class=\"card-body  text-center\">\n            <h5 class=\"card-title\" [innerHtml]=\"alternative | decodeHtmlEntities\"> {{ alternative }}</h5>\n          </div>\n        </div>\n      </div>\n    </section>\n</main>\n<ng-template #loading >\n  <i class=\"fas fa-circle-notch fa-spin fa-2x spinner\" spin ></i>\n</ng-template>\n<h6 class=\"navigate text-center\" (click)=\"onNavigateToMenu()\" >Back to menu</h6>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from './models/category';\nimport { QuestionService } from './shared/services/question.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(){\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ScoreService } from 'src/app/shared/services/score.service';\n\n@Component({\n  selector: 'app-score',\n  templateUrl: './score.component.html',\n  styleUrls: ['./score.component.css']\n})\nexport class ScoreComponent implements OnInit {\n  finalScore: number;\n  maxPoints: number;\n\n  constructor(private scoreService: ScoreService, private route: ActivatedRoute, private router: Router) {\n    this.getMaxPoints();\n    this.getScore();\n  }\n\n  ngOnInit(): void {}\n\n\n  getScore(): void{\n    this.finalScore = this.scoreService.getScore();\n  }\n\n  getMaxPoints(): void {\n    this.maxPoints = this.scoreService.getMaxPoints();\n  }\n  onNavigateToMenu(): void{\n    this.router.navigate(['/categories']);\n  }\n}\n","<h1 class=\"display-4\">Scoreboard</h1>\n  <section class=\"container-fluid main-container d-flex flex-wrap justify-content-center\">\n    <h3 class=\"text-center mb-4 w-75\"></h3>\n    <div class=\"container-fluid main-container d-flex flex-wrap justify-content-center\" >\n      <div class=\"card p-0 \">\n        <img class=\"card-img-top\" src=\"../../../assets/images/score-image.jpg\" alt=\"Photo by Heather Ford https://www.themodernlifemrs.com/\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\"> Result</h2>\n        <h3>  You got <span class=\"score-span\"> {{ finalScore }} </span> out of <span class=\"score-span\">  {{ maxPoints }} </span> points! </h3>\n      </div>\n      </div>\n    </div>\n  </section>\n  <h6 class=\"navigate text-center\" (click)=\"onNavigateToMenu()\" >Back to menu</h6>\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { HttpClient} from '@angular/common/http';\nimport { OpenTDbToken } from 'src/app/models/open-tdb-token';\nimport { Category } from 'src/app/models/category';\nimport { OpenTDBResponse } from 'src/app/models/open-tdb-response';\nimport { OpenTDBCategoryResponse } from 'src/app/models/open-tdb-category-response';\n\n@Injectable({\n  providedIn: 'root',\n})\n\n// Fetching data from the Open Trivia Database API: https://opentdb.com/\nexport class QuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  token: string;\n\n  getToken(): void{\n    this.http.get<OpenTDbToken>(`${environment.opentdbApi.retrieveTokenUrl}`).subscribe(\n      (response: OpenTDbToken) => {\n        this.token = response.token;\n    },\n    (error) => {\n    });\n  }\n\n  getCategories(): Observable<OpenTDBCategoryResponse> {\n    return this.http.get<OpenTDBCategoryResponse >(environment.opentdbApi.trivia_categories);\n  }\n\n  getQuestions(amount: number, category: number): Observable<OpenTDBResponse>{\n    return this.http.get<OpenTDBResponse>(`${environment.opentdbApi.opentdbBaseUrl}api.php?amount=${amount}&category=${category}&difficulty=easy`);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CategoryComponent } from './components/category/category.component';\nimport { QuestionComponent } from './components/question/question.component';\nimport { DecodeHtmlEntitiesPipe } from './shared/decode-html-entities.pipe';\nimport { ScoreComponent } from './components/score/score.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoryComponent,\n    QuestionComponent,\n    DecodeHtmlEntitiesPipe,\n    ScoreComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/models/category';\nimport { QuestionService } from 'src/app/shared/services/question.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n\n  categories: Category[] = [];\n  isLoading = true;\n\n  constructor(\n    private questionService: QuestionService,\n    private route: ActivatedRoute,\n    private router: Router){\n  }\n\n  ngOnInit(): void {\n    this.questionService.getToken();\n    this.questionService.getCategories().subscribe((categories) => {\n      this.categories = categories.trivia_categories.sort((category1, category2) => (category1.name > category2.name) ? 1 : -1);\n      this.isLoading = false;\n    });\n  }\n\n  onCategorySelected(category: Category): void{\n    const amount = 10;\n    this.router.navigate(['questions', amount, category.id]);\n  }\n}\n","<main *ngIf=\"!isLoading; else loading\">\n  <h1 class=\"display-4\">Select a category</h1>\n  <section class=\"container-fluid main-container d-flex flex-wrap justify-content-center\">\n    <div class=\"card p-2 w-25\" *ngFor=\"let category of categories\" (click)=\"onCategorySelected(category)\">\n      <div class=\"card-body text-center\">\n        <h5 class=\"card-title\"> {{ category.name }}</h5>\n      </div>\n    </div>\n  </section>\n</main>\n<ng-template #loading >\n  <i class=\"fas fa-circle-notch fa-spin fa-2x spinner\" spin ></i>\n</ng-template>\n\n\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\n\n@Injectable({\n    providedIn: 'root',\n  })\n\n  export class ScoreService {\n\n    constructor() { }\n\n    // Observable source\n    private pointSource = new Subject<number>();\n    private maxPointSource = new Subject<number>();\n\n    // Observable streams\n    public pointSourceChanged$ = this.pointSource.asObservable();\n    public maxPointSourceChanged$ = this.pointSource.asObservable();\n\n    points = 0;\n    maxPoints: number;\n\n    addPoints(): void {\n        this.points++;\n        this.pointSource.next(this.points);\n    }\n\n    getScore(): number {\n        return this.points;\n    }\n    setMaxScore(maxPoints: number): void {\n        this.maxPoints = maxPoints;\n        this.maxPointSource.next(this.maxPoints);\n    }\n\n    getMaxPoints(): number {\n        return this.maxPoints;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategoryComponent } from './components/category/category.component';\nimport { QuestionComponent } from './components/question/question.component';\n\nimport { ScoreComponent } from './components/score/score.component';\nconst routes: Routes = [\n  {path: '', component: CategoryComponent, pathMatch: 'full' },\n  {path: 'questions/:amount/:category', component:  QuestionComponent },\n  {path: 'score', component: ScoreComponent},\n  {path: 'categories', component: CategoryComponent}\n  //{path: '**' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'decodeHtmlEntities'\n})\nexport class DecodeHtmlEntitiesPipe implements PipeTransform {\n\n  constructor(private sanitized: DomSanitizer) { }\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n\n\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}